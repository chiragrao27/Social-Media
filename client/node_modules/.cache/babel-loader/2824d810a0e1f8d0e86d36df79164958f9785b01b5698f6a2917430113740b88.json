{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  mode: \"light\",\n  user: null,\n  token: null,\n  posts: []\n};\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setMode: state => {\n      state.mode = state.mode === \"light\" ? \"dark\" : \"light\";\n    },\n    setLogin: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    },\n    setLogout: state => {\n      state.user = null;\n      state.token = null;\n    },\n    setFriends: (state, action) => {\n      if (state.user) {\n        state.user.friends = action.payload.friends;\n      } else {\n        console.error(\"user friends non-existent\");\n      }\n    },\n    setPosts: (state, action) => {\n      state.posts = action.payload.posts;\n    },\n    setPost: (state, action) => {\n      const updatedPosts = state.posts.map(post => {\n        if (post.id === action.payload.id) {\n          return action.payload.post;\n        } else {\n          return post;\n        }\n      });\n      state.posts = updatedPosts;\n    }\n  }\n});\nexport const {\n  setMode,\n  setLogin,\n  setLogot,\n  setFriends,\n  setPosts,\n  setPost\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","mode","user","token","posts","authSlice","name","reducers","setMode","state","setLogin","action","payload","setLogout","setFriends","friends","console","error","setPosts","setPost","updatedPosts","map","post","id","setLogot","actions","reducer"],"sources":["C:/Users/91797/Desktop/react_project/Social Media/client/src/state/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    mode : \"light\",\r\n    user : null,\r\n    token : null,\r\n    posts :[]\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState,\r\n    reducers: {\r\n        setMode : (state) =>{\r\n            state.mode = state.mode === \"light\" ? \"dark\" : \"light\";\r\n        },\r\n        setLogin : (state, action) =>{\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n        },\r\n        setLogout : (state) =>{\r\n            state.user = null;\r\n            state.token = null;\r\n        },\r\n        setFriends : (state, action) =>{\r\n            if(state.user){\r\n                state.user.friends = action.payload.friends;\r\n            }else{\r\n                console.error(\"user friends non-existent\");\r\n            }\r\n        },\r\n        setPosts : (state, action) =>{\r\n            state.posts = action.payload.posts;\r\n        },\r\n        setPost : (state,action) =>{\r\n            const updatedPosts = state.posts.map((post)=>{\r\n                if(post.id === action.payload.id){\r\n                     return action.payload.post;\r\n                }else{\r\n                    return post;\r\n                }\r\n            })\r\n            state.posts = updatedPosts;\r\n        }\r\n\r\n    }\r\n});\r\n\r\nexport const { setMode, setLogin, setLogot, setFriends, setPosts, setPost } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAG,OAAO;EACdC,IAAI,EAAG,IAAI;EACXC,KAAK,EAAG,IAAI;EACZC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGN,WAAW,CAAC;EACjCO,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE;IACNC,OAAO,EAAIC,KAAK,IAAI;MAChBA,KAAK,CAACR,IAAI,GAAGQ,KAAK,CAACR,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IAC1D,CAAC;IACDS,QAAQ,EAAGA,CAACD,KAAK,EAAEE,MAAM,KAAI;MACzBF,KAAK,CAACP,IAAI,GAAGS,MAAM,CAACC,OAAO,CAACV,IAAI;MAChCO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO,CAACT,KAAK;IACtC,CAAC;IACDU,SAAS,EAAIJ,KAAK,IAAI;MAClBA,KAAK,CAACP,IAAI,GAAG,IAAI;MACjBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACtB,CAAC;IACDW,UAAU,EAAGA,CAACL,KAAK,EAAEE,MAAM,KAAI;MAC3B,IAAGF,KAAK,CAACP,IAAI,EAAC;QACVO,KAAK,CAACP,IAAI,CAACa,OAAO,GAAGJ,MAAM,CAACC,OAAO,CAACG,OAAO;MAC/C,CAAC,MAAI;QACDC,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACJ,CAAC;IACDC,QAAQ,EAAGA,CAACT,KAAK,EAAEE,MAAM,KAAI;MACzBF,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO,CAACR,KAAK;IACtC,CAAC;IACDe,OAAO,EAAGA,CAACV,KAAK,EAACE,MAAM,KAAI;MACvB,MAAMS,YAAY,GAAGX,KAAK,CAACL,KAAK,CAACiB,GAAG,CAAEC,IAAI,IAAG;QACzC,IAAGA,IAAI,CAACC,EAAE,KAAKZ,MAAM,CAACC,OAAO,CAACW,EAAE,EAAC;UAC5B,OAAOZ,MAAM,CAACC,OAAO,CAACU,IAAI;QAC/B,CAAC,MAAI;UACD,OAAOA,IAAI;QACf;MACJ,CAAC,CAAC;MACFb,KAAK,CAACL,KAAK,GAAGgB,YAAY;IAC9B;EAEJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEZ,OAAO;EAAEE,QAAQ;EAAEc,QAAQ;EAAEV,UAAU;EAAEI,QAAQ;EAAEC;AAAQ,CAAC,GAAGd,SAAS,CAACoB,OAAO;AAE/F,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}