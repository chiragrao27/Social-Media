{"ast":null,"code":"var _s = $RefreshSig$();\nimport { EditOutlined, DeleteOutlined, AttachFileOutlined, GifBoxOutlined, ImageOutlined, MicOutlined, MoreHorizOutlined } from \"@mui/icons-material\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { Divider, InputBase, useTheme, Button, IconButton, useMediaQuery } from \"@mui/material\";\nimport FlexBetween from \"components/FlexBetween\";\nimport Dropzone from \"react-dropzone\";\nimport UserImage from \"components/UserImage\";\nimport WidgetWrapper from \"components/WidgetWrapper\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport state, { setPosts } from \"state\";\nconst MyPostWidget = _ref => {\n  _s();\n  let {\n    picturePath\n  } = _ref;\n  const dispatch = useDispatch();\n  const [isImage, setIsImage] = useState(false);\n  const [image, setImage] = useState(null);\n  const [post, setPost] = useState(\"\");\n  const palette = useTheme();\n  const {\n    _id\n  } = useSelector(state => state.user);\n  const token = useSelector(state => state.token);\n  const isNonMobileScreens = useMediaQuery(\"(min-width: 1000px)\");\n  const mediumMain = palette.neutral.mediumMain;\n  const medium = palette.neutral.medium;\n  const handlePost = async () => {\n    const formData = new FormData();\n    formData.append(\"userId\", _id);\n    formData.append(\"description\", post);\n    if (image) {\n      formData.append(\"picture\", image);\n      formData.append(\"picturPath\", image.name);\n    }\n    const response = await fetch(`http://localhost:3001/posts`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: `Bearer ${token}`,\n        body: formData\n      }\n    });\n    const posts = await response.json();\n    dispatch(setPosts({\n      posts\n    }));\n    setImage(null);\n    setPost(\"\");\n  };\n};\n_s(MyPostWidget, \"xqjiAUYZYQuPFqrD6srZzcsHnbk=\", false, function () {\n  return [useDispatch, useTheme, useSelector, useSelector, useMediaQuery];\n});\n_c = MyPostWidget;\nvar _c;\n$RefreshReg$(_c, \"MyPostWidget\");","map":{"version":3,"names":["EditOutlined","DeleteOutlined","AttachFileOutlined","GifBoxOutlined","ImageOutlined","MicOutlined","MoreHorizOutlined","Box","Typography","Divider","InputBase","useTheme","Button","IconButton","useMediaQuery","FlexBetween","Dropzone","UserImage","WidgetWrapper","useState","useDispatch","useSelector","state","setPosts","MyPostWidget","_ref","_s","picturePath","dispatch","isImage","setIsImage","image","setImage","post","setPost","palette","_id","user","token","isNonMobileScreens","mediumMain","neutral","medium","handlePost","formData","FormData","append","name","response","fetch","method","headers","Authorization","body","posts","json","_c","$RefreshReg$"],"sources":["C:/Users/91797/Desktop/react_project/Social Media/client/src/scenes/widgets/MyPostWidget.jsx"],"sourcesContent":["import {\r\n    EditOutlined,\r\n    DeleteOutlined,\r\n    AttachFileOutlined,\r\n    GifBoxOutlined,\r\n    ImageOutlined,\r\n    MicOutlined,\r\n    MoreHorizOutlined \r\n} from \"@mui/icons-material\"\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport {\r\n    Divider,\r\n    InputBase,\r\n    useTheme,\r\n    Button,\r\n    IconButton,\r\n    useMediaQuery\r\n} from \"@mui/material\";\r\nimport FlexBetween from \"components/FlexBetween\"\r\nimport Dropzone from \"react-dropzone\";\r\nimport UserImage from \"components/UserImage\";\r\nimport WidgetWrapper from \"components/WidgetWrapper\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch , useSelector } from \"react-redux\";\r\nimport state, { setPosts } from \"state\";\r\n\r\nconst MyPostWidget = ({picturePath}) =>{\r\n    const dispatch = useDispatch();\r\n    const [isImage, setIsImage] = useState(false);\r\n    const [image, setImage] = useState(null);\r\n    const [post, setPost] = useState(\"\");\r\n    \r\n    const palette = useTheme();\r\n    const { _id }  = useSelector((state) => state.user);\r\n    const token = useSelector((state) => state.token);\r\n    const isNonMobileScreens = useMediaQuery(\"(min-width: 1000px)\");\r\n    const mediumMain = palette.neutral.mediumMain;\r\n    const medium = palette.neutral.medium;\r\n\r\n    const handlePost = async () => {\r\n        const formData = new FormData();\r\n        formData.append(\"userId\", _id);\r\n        formData.append(\"description\",post);\r\n        if(image) {\r\n            formData.append(\"picture\", image);\r\n            formData.append(\"picturPath\", image.name);\r\n        }\r\n    \r\n\r\n    const response = await fetch(`http://localhost:3001/posts`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            Authorization: `Bearer ${token}`,\r\n            body: formData,\r\n        },\r\n        \r\n    });\r\n\r\n    const posts = await response.json();\r\n    dispatch(setPosts({posts}));\r\n    setImage(null);\r\n    setPost(\"\");\r\n\r\n    }\r\n}"],"mappings":";AAAA,SACIA,YAAY,EACZC,cAAc,EACdC,kBAAkB,EAClBC,cAAc,EACdC,aAAa,EACbC,WAAW,EACXC,iBAAiB,QACd,qBAAqB;AAE5B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SACIC,OAAO,EACPC,SAAS,EACTC,QAAQ,EACRC,MAAM,EACNC,UAAU,EACVC,aAAa,QACV,eAAe;AACtB,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,aAAa,MAAM,0BAA0B;AACpD,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAGC,WAAW,QAAQ,aAAa;AACvD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,MAAMC,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAACC;EAAW,CAAC,GAAAF,IAAA;EAC/B,MAAMG,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMgB,OAAO,GAAGxB,QAAQ,CAAC,CAAC;EAC1B,MAAM;IAAEyB;EAAI,CAAC,GAAIf,WAAW,CAAEC,KAAK,IAAKA,KAAK,CAACe,IAAI,CAAC;EACnD,MAAMC,KAAK,GAAGjB,WAAW,CAAEC,KAAK,IAAKA,KAAK,CAACgB,KAAK,CAAC;EACjD,MAAMC,kBAAkB,GAAGzB,aAAa,CAAC,qBAAqB,CAAC;EAC/D,MAAM0B,UAAU,GAAGL,OAAO,CAACM,OAAO,CAACD,UAAU;EAC7C,MAAME,MAAM,GAAGP,OAAO,CAACM,OAAO,CAACC,MAAM;EAErC,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEV,GAAG,CAAC;IAC9BQ,QAAQ,CAACE,MAAM,CAAC,aAAa,EAACb,IAAI,CAAC;IACnC,IAAGF,KAAK,EAAE;MACNa,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEf,KAAK,CAAC;MACjCa,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEf,KAAK,CAACgB,IAAI,CAAC;IAC7C;IAGJ,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAA4B,EAAE;MACxDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,qBAAqB;QACrCC,aAAa,EAAG,UAASd,KAAM,EAAC;QAChCe,IAAI,EAAET;MACV;IAEJ,CAAC,CAAC;IAEF,MAAMU,KAAK,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IACnC3B,QAAQ,CAACL,QAAQ,CAAC;MAAC+B;IAAK,CAAC,CAAC,CAAC;IAC3BtB,QAAQ,CAAC,IAAI,CAAC;IACdE,OAAO,CAAC,EAAE,CAAC;EAEX,CAAC;AACL,CAAC;AAAAR,EAAA,CAvCKF,YAAY;EAAA,QACGJ,WAAW,EAKZT,QAAQ,EACPU,WAAW,EACdA,WAAW,EACEP,aAAa;AAAA;AAAA0C,EAAA,GATtChC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}